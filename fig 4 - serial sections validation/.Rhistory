betahat = c(betahat, colSums(tempbeta[tempcells, rownames(pnorm), drop = F]))
protexpr = c(protexpr, pnorm[rownames(pnorm), name])
aoiid = c(aoiid, rownames(pnorm))
protid = c(protid, rep(name, nrow(pnorm)))
}
plotdf = data.frame(betahat = betahat, protexpr = protexpr, aoiid = aoiid, protid = protid, stringsAsFactors = F)
plotdf$tissue = annot[plotdf$aoiid, "tissue"]
plotdf$AOI_type = annot[plotdf$aoiid, "AOI_type"]
# custom names
plotdf$protid[plotdf$protid == "CD20"] = "CD20 protein\nvs. B-cells"
plotdf$protid[plotdf$protid == "CD3"] = "CD3 protein\nvs. total T-cells"
plotdf$protid[plotdf$protid == "CD8"] = "CD8 protein\nvs. CD8 T-cells"
plotdf$protid[plotdf$protid == "CD68"] = "CD68 protein\nvs. macrophages"
plotdf$protid[plotdf$protid == "CD66b"] = "CD66b protein\nvs. neutrophils"
plotdf$protid[plotdf$protid == "SMA"] = "SMA protein\nvs. fibroblasts"
plotdf$tumor = paste0("Tumor ", 1:5)[as.numeric(as.factor(plotdf$tissue))]
plotdf$protid = factor(plotdf$protid,
levels = c("CD3 protein\nvs. total T-cells",
"CD8 protein\nvs. CD8 T-cells",
"CD20 protein\nvs. B-cells",
"CD68 protein\nvs. macrophages",
"CD66b protein\nvs. neutrophils",
"SMA protein\nvs. fibroblasts"))
g = ggplot(data = plotdf, aes(x = protexpr, y = betahat, col = AOI_type)) +
geom_point(alpha = 0.5, size = 2) +
facet_grid(tumor ~ protid, scales = "free") +
scale_y_continuous(limits=c(0, 10)) +
theme_few() +
scale_color_manual(values = aoicols) +
labs(x = "Protein expression", y = "Cell abundance estimated from RNA") +
theme(axis.title.x = element_text(size = 17), axis.title.y = element_text(size = 17),
strip.text.x = element_text(size = 12), legend.title = element_blank()) +
theme(legend.position="bottom") + theme(legend.text = element_text(size=16))
print(g)
cors = spearmans = list()
for (name in names(betas)) {
cors[[name]] = spearmans[[name]] = matrix(NA, nrow = length(unique(annot$tissue)), ncol = length(cpmatch),
dimnames = list(unique(annot$tissue), names(cpmatch)))
}
for (tiss in unique(annot$tissue)) {
for (pname in names(cpmatch)) {
for (name in names(betas)) {
tempcells = cpmatch[[pname]]
tempbeta = colSums(betas[[name]][tempcells, rownames(pnorm), drop = F])
tempprot = pnorm[, pname]
cors[[name]][tiss, pname] = cor(tempbeta[annot$tissue == tiss], tempprot[annot$tissue == tiss], method = "pearson", use = "complete")
spearmans[[name]][tiss, pname] = cor(tempbeta[annot$tissue == tiss], tempprot[annot$tissue == tiss], method = "spearman", use = "complete")
# set NA's (from decon results with 0 variability) to zero:
if (name == "spatialDWLS") {
cors[[name]][is.na(cors[[name]])] = 0
spearmans[[name]][is.na(spearmans[[name]])] = 0
}
}
}
}
## plot results: -------------------
# assemble data frame for ggplot:
method = tissue = protein = stat = value = c()
for (obj in c("cors", "spearmans")) {
temp = get(obj)
for (name in names(temp)) {
for (tiss in rownames(temp[[name]])) {
method = c(method, rep(name, ncol(temp[[name]])))
tissue = c(tissue, rep(tiss, ncol(temp[[name]])))
protein = c(protein, colnames(temp[[name]]))
stat = c(stat, rep(obj, ncol(temp[[name]])))
value = c(value, temp[[name]][tiss, ])
}
}
}
plotdf = data.frame(method = method, tissue = tissue, protein = protein, stat = stat, value = value)
# custom names
plotdf$protein[plotdf$protein == "CD20"] = "CD20 protein\nvs. B-cells"
plotdf$protein[plotdf$protein == "CD3"] = "CD3 protein\nvs. total T-cells"
plotdf$protein[plotdf$protein == "CD8"] = "CD8 protein\nvs. CD8 T-cells"
plotdf$protein[plotdf$protein == "CD68"] = "CD68 protein\nvs. macrophages"
plotdf$protein[plotdf$protein == "CD66b"] = "CD66b protein\nvs. neutrophils"
plotdf$protein[plotdf$protein == "SMA"] = "SMA protein\nvs. fibroblasts"
plotdf$tumor = paste0("Tumor ", 1:5)[as.numeric(as.factor(plotdf$tissue))]
plotdf$protein = factor(plotdf$protein,
levels = c("CD3 protein\nvs. total T-cells",
"CD8 protein\nvs. CD8 T-cells",
"CD20 protein\nvs. B-cells",
"CD68 protein\nvs. macrophages",
"CD66b protein\nvs. neutrophils",
"SMA protein\nvs. fibroblasts"))
plotdf$method[plotdf$method == "spatialdecon.modeltumor"] = "SpatialDecon modelling tumor"
plotdf$method[plotdf$method == "spatialdecon.ignoretumor"] = "SpatialDecon ignoring tumor"
plotdf$method[plotdf$method == "stereo"] = "Stereoscope + safeTME"
plotdf$method[plotdf$method == "stereo.lung"] = "Stereoscope + scRNAseq lung profiles"
plotdf$method[plotdf$method == "VSVR"] = "v-SVR"
plotdf$method[plotdf$method == "spatialDWLS"] = "SpatialDWLS"
plotdf$method = factor(plotdf$method, levels = c("SpatialDecon modelling tumor",
"SpatialDecon ignoring tumor",
"NNLS", "v-SVR", "DWLS", "SpatialDWLS",
"Stereoscope + safeTME",
"Stereoscope + scRNAseq lung profiles"))
colmap = c(
"SpatialDecon modelling tumor" = "red",
"SpatialDecon ignoring tumor" = "orange",
"NNLS" = "grey30",
"v-SVR" = "chartreuse3",
"DWLS" = "darkviolet",
"SpatialDWLS" = "#330099",
"Stereoscope + safeTME" = "dodgerblue4",
"Stereoscope + scRNAseq lung profiles" = "cornflowerblue")
use = (plotdf$stat == "cors") #& (is.element(plotdf$method, c("DWLS", "spatialdecon.ignoretumor", "spatialdecon.modeltumor")))
g = ggplot(data = plotdf[use, ], aes(x = method, y = value, fill = method, col = method, )) +
geom_bar(alpha = 0.5, size = 1, stat = "identity") +
theme_few() +
facet_grid(tumor ~ protein, scales = "free") +
scale_y_continuous(limits=c(-0.45, 1)) +
scale_x_discrete(labels = NULL) +
scale_fill_manual(values = colmap) +
scale_color_manual(values = colmap, ) +
labs(x = "Method", y = "Correlation") +
theme(axis.title.x = element_text(size = 17), axis.title.y = element_text(size = 17),
strip.text.x = element_text(size = 12), legend.title = element_blank()) +
theme(legend.position="bottom") + theme(legend.text = element_text(size=10))
print(g)
# statistics:
ps = deltas = means = cis = dfs = c()
for (name in names(cors)) {
mod = t.test(as.vector(cors$spatialdecon.modeltumor) - as.vector(cors[[name]]))
ps[name] = mod$p.value
deltas[name] = mod$estimate
means[name] = mean(cors[[name]])
cis[name] = sd(cors[[name]]) / sqrt(length(cors[[name]]))
}
# look at p-values vs. spatialdecon:
print(ps)
t.test(as.vector(cors$spatialdecon.modeltumor) - as.vector(cors$VSVR))
t.test(as.vector(cors$spatialdecon.modeltumor) - as.vector(cors$NNLS))
t.test(as.vector(cors$spatialdecon.modeltumor) - as.vector(cors$spatialdecon.ignoretumor))
# compare two stereoscope runs:
t.test(as.vector(cors$stereo) - as.vector(cors$stereo.lung))
# plot summary statistics:
plotdf = data.frame(mean = means, ci = cis, method = names(means))
# remove stereoscope + lung scRNAseq, which isn't comparable to the rest since it's missing cell types:
plotdf = plotdf[setdiff(rownames(plotdf), "stereo.lung"), ]
# format names:
plotdf$method[plotdf$method == "spatialdecon.modeltumor"] = "SpatialDecon modelling tumor"
plotdf$method[plotdf$method == "spatialdecon.ignoretumor"] = "SpatialDecon ignoring tumor"
plotdf$method[plotdf$method == "stereo"] = "Stereoscope + safeTME"
plotdf$method[plotdf$method == "VSVR"] = "v-SVR"
plotdf$method[plotdf$method == "spatialDWLS"] = "SpatialDWLS"
plotdf$method = factor(plotdf$method, levels = c("SpatialDecon modelling tumor",
"SpatialDecon ignoring tumor",
"NNLS", "v-SVR", "DWLS", "SpatialDWLS",
"Stereoscope + safeTME"))
g = ggplot(data = plotdf, aes(x = method, y = mean, fill = method, col = method)) +
geom_bar(alpha = 0.5, size = 1, stat = "identity", show.legend = FALSE) +
theme_few() +
scale_y_continuous(limits=c(0, 0.85)) +
#scale_x_discrete(labels = NULL) +
scale_fill_manual(values = colmap) +
scale_color_manual(values = colmap, ) +
labs(x = "", y = "Mean correlation") +
theme(axis.title.x = element_text(size = 17), axis.title.y = element_text(size = 17),
strip.text.x = element_text(size = 16), legend.title = element_blank()) +
theme(axis.text.x = element_text(angle=-90, size = 15)) +
geom_errorbar(aes(ymin=mean-2*ci, ymax=mean + 2*ci), width=.2,
position=position_dodge(.9), col = I("black"))
print(g)
head(plotdf)
# plot summary statistics:
meansdf = data.frame(mean = means, ci = cis, method = names(means))
# remove stereoscope + lung scRNAseq, which isn't comparable to the rest since it's missing cell types:
meansdf = meansdf[setdiff(rownames(meansdf), "stereo.lung"), ]
# format names:
meansdf$method[meansdf$method == "spatialdecon.modeltumor"] = "SpatialDecon modelling tumor"
meansdf$method[meansdf$method == "spatialdecon.ignoretumor"] = "SpatialDecon ignoring tumor"
meansdf$method[meansdf$method == "stereo"] = "Stereoscope + safeTME"
meansdf$method[meansdf$method == "VSVR"] = "v-SVR"
meansdf$method[meansdf$method == "spatialDWLS"] = "SpatialDWLS"
meansdf$method = factor(meansdf$method, levels = c("SpatialDecon modelling tumor",
"SpatialDecon ignoring tumor",
"NNLS", "v-SVR", "DWLS", "SpatialDWLS",
"Stereoscope + safeTME"))
g = ggplot(data = meansdf, aes(x = method, y = mean, fill = method, col = method)) +
geom_bar(alpha = 0.5, size = 1, stat = "identity", show.legend = FALSE) +
theme_few() +
scale_y_continuous(limits=c(0, 0.85)) +
#scale_x_discrete(labels = NULL) +
scale_fill_manual(values = colmap) +
scale_color_manual(values = colmap, ) +
labs(x = "", y = "Mean correlation") +
theme(axis.title.x = element_text(size = 17), axis.title.y = element_text(size = 17),
strip.text.x = element_text(size = 16), legend.title = element_blank()) +
theme(axis.text.x = element_text(angle=-90, size = 15)) +
geom_errorbar(aes(ymin=mean-2*ci, ymax=mean + 2*ci), width=.2,
position=position_dodge(.9), col = I("black"))
print(g )
# assemble data frame for ggplot:
method = tissue = protein = stat = value = c()
for (obj in c("cors", "spearmans")) {
temp = get(obj)
for (name in names(temp)) {
for (tiss in rownames(temp[[name]])) {
method = c(method, rep(name, ncol(temp[[name]])))
tissue = c(tissue, rep(tiss, ncol(temp[[name]])))
protein = c(protein, colnames(temp[[name]]))
stat = c(stat, rep(obj, ncol(temp[[name]])))
value = c(value, temp[[name]][tiss, ])
}
}
}
plotdf = data.frame(method = method, tissue = tissue, protein = protein, stat = stat, value = value)
# custom names
plotdf$protein[plotdf$protein == "CD20"] = "CD20 protein\nvs. B-cells"
plotdf$protein[plotdf$protein == "CD3"] = "CD3 protein\nvs. total T-cells"
plotdf$protein[plotdf$protein == "CD8"] = "CD8 protein\nvs. CD8 T-cells"
plotdf$protein[plotdf$protein == "CD68"] = "CD68 protein\nvs. macrophages"
plotdf$protein[plotdf$protein == "CD66b"] = "CD66b protein\nvs. neutrophils"
plotdf$protein[plotdf$protein == "SMA"] = "SMA protein\nvs. fibroblasts"
plotdf$tumor = paste0("Tumor ", 1:5)[as.numeric(as.factor(plotdf$tissue))]
plotdf$protein = factor(plotdf$protein,
levels = c("CD3 protein\nvs. total T-cells",
"CD8 protein\nvs. CD8 T-cells",
"CD20 protein\nvs. B-cells",
"CD68 protein\nvs. macrophages",
"CD66b protein\nvs. neutrophils",
"SMA protein\nvs. fibroblasts"))
plotdf$method[plotdf$method == "spatialdecon.modeltumor"] = "SpatialDecon modelling tumor"
plotdf$method[plotdf$method == "spatialdecon.ignoretumor"] = "SpatialDecon ignoring tumor"
plotdf$method[plotdf$method == "stereo"] = "Stereoscope + safeTME"
plotdf$method[plotdf$method == "stereo.lung"] = "Stereoscope + scRNAseq lung profiles"
plotdf$method[plotdf$method == "VSVR"] = "v-SVR"
plotdf$method[plotdf$method == "spatialDWLS"] = "SpatialDWLS"
plotdf$method = factor(plotdf$method, levels = c("SpatialDecon modelling tumor",
"SpatialDecon ignoring tumor",
"NNLS", "v-SVR", "DWLS", "SpatialDWLS",
"Stereoscope + safeTME",
"Stereoscope + scRNAseq lung profiles"))
colmap = c(
"SpatialDecon modelling tumor" = "red",
"SpatialDecon ignoring tumor" = "orange",
"NNLS" = "grey30",
"v-SVR" = "chartreuse3",
"DWLS" = "darkviolet",
"SpatialDWLS" = "#330099",
"Stereoscope + safeTME" = "dodgerblue4",
"Stereoscope + scRNAseq lung profiles" = "cornflowerblue")
head(plotdf)
print(g + geom_point(data = plotdf, aes(x = method, y = stat)))
print(g + geom_point(data = plotdf, aes(x = method, y = stat)))
ggplot(data = plotdf, aes(x = method, y = mean)) + geom_point
ggplot(data = plotdf, aes(x = method, y = mean)) + geom_point()
dev.off()
ggplot(data = plotdf, aes(x = method, y = mean)) + geom_point()
ggplot(data = plotdf, aes(x = method, y = mean)) + geom_boxplot()
# Use geom_errorbar()
p <-  <- ggplot(plotdf, aes(x=method, y=lstat)) +
geom_dotplot(binaxis='y', stackdir='center')
# Use geom_errorbar()
p <- ggplot(plotdf, aes(x=method, y=lstat)) +
geom_dotplot(binaxis='y', stackdir='center')
p
# Use geom_errorbar()
p <- ggplot(plotdf, aes(x=method, y=stat)) +
geom_dotplot(binaxis='y', stackdir='center')
p
# Use geom_errorbar()
plotdf <- plotdf[use, ]
p <- ggplot(plotdf, aes(x=method, y=stat)) +
geom_dotplot(binaxis='y', stackdir='center')
p
p + stat_summary(fun.data=mean_sdl, fun.args = list(mult=1),
geom="errorbar", color="red", width=0.2) +
stat_summary(fun.y=mean, geom="point", color="red")
p
plot(plotdf$method, plotdf$stat)
boxplot(as.numeric(plotdf$method), plotdf$stat)
boxplot(plotdf$method, plotdf$stat)
plotdf$method
plotdf$stat
head(plotdf)
p <- ggplot(plotdf, aes(x=method, y=value)) +
geom_dotplot(binaxis='y', stackdir='center')
p
boxplot(plotdf$method, plotdf$value)
boxplot(plotdf$method, plotdf$value, col = 0, border = 0)
table(plotdf$method)
boxplot(plotdf$method, plotdf$value, col = 0, border = 0)
str(plotdf$method)
table(plotdf$method)
boxplot(plotdf$method, plotdf$value)
head(plotdf)
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0)
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0, las = 2)
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0, las = 2, xlab = "",
ylab = "Correlation")
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0, las = 2, xlab = "",
ylab = "Correlation", cex.lab = 1.5)
par(mar = c(12,5,2,1))
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0, las = 2, xlab = "",
ylab = "Correlation", cex.lab = 1.5)
par(mar = c(14,5,2,1))
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0, las = 2, xlab = "",
ylab = "Correlation", cex.lab = 1.5)
par(mar = c(16,5,2,1))
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0, las = 2, xlab = "",
ylab = "Correlation", cex.lab = 1.5)
cols
points(jitter(as.numeric(plotdf$method)), plotdf$value, col = colmap[plotdf$method])
points(jitter(as.numeric(plotdf$method)), plotdf$value, col = alpha(colmap[plotdf$method], 0.5),
pch = 16)
head(meansdf)
meansdf
use = (plotdf$stat == "cors") & is.element(plotdf$method, rownames(meansdf))
plotdf = plotdf[use, ]
par(mar = c(16,5,2,1))
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0, las = 2, xlab = "",
ylab = "Correlation", cex.lab = 1.5)
points(jitter(as.numeric(plotdf$method)), plotdf$value, col = alpha(colmap[plotdf$method], 0.5),
pch = 16)
use = (plotdf$stat == "cors") & is.element(plotdf$method, rownames(meansdf))
plotdf = plotdf[use, ]
par(mar = c(16,5,2,1))
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0, las = 2, xlab = "",
ylab = "Correlation", cex.lab = 1.5)
points(jitter(as.numeric(plotdf$method)), plotdf$value, col = alpha(colmap[plotdf$method], 0.5),
pch = 16)
# assemble data frame for ggplot:
method = tissue = protein = stat = value = c()
for (obj in c("cors", "spearmans")) {
temp = get(obj)
for (name in names(temp)) {
for (tiss in rownames(temp[[name]])) {
method = c(method, rep(name, ncol(temp[[name]])))
tissue = c(tissue, rep(tiss, ncol(temp[[name]])))
protein = c(protein, colnames(temp[[name]]))
stat = c(stat, rep(obj, ncol(temp[[name]])))
value = c(value, temp[[name]][tiss, ])
}
}
}
plotdf = data.frame(method = method, tissue = tissue, protein = protein, stat = stat, value = value)
# custom names
plotdf$protein[plotdf$protein == "CD20"] = "CD20 protein\nvs. B-cells"
plotdf$protein[plotdf$protein == "CD3"] = "CD3 protein\nvs. total T-cells"
plotdf$protein[plotdf$protein == "CD8"] = "CD8 protein\nvs. CD8 T-cells"
plotdf$protein[plotdf$protein == "CD68"] = "CD68 protein\nvs. macrophages"
plotdf$protein[plotdf$protein == "CD66b"] = "CD66b protein\nvs. neutrophils"
plotdf$protein[plotdf$protein == "SMA"] = "SMA protein\nvs. fibroblasts"
plotdf$tumor = paste0("Tumor ", 1:5)[as.numeric(as.factor(plotdf$tissue))]
plotdf$protein = factor(plotdf$protein,
levels = c("CD3 protein\nvs. total T-cells",
"CD8 protein\nvs. CD8 T-cells",
"CD20 protein\nvs. B-cells",
"CD68 protein\nvs. macrophages",
"CD66b protein\nvs. neutrophils",
"SMA protein\nvs. fibroblasts"))
plotdf$method[plotdf$method == "spatialdecon.modeltumor"] = "SpatialDecon modelling tumor"
plotdf$method[plotdf$method == "spatialdecon.ignoretumor"] = "SpatialDecon ignoring tumor"
plotdf$method[plotdf$method == "stereo"] = "Stereoscope + safeTME"
plotdf$method[plotdf$method == "stereo.lung"] = "Stereoscope + scRNAseq lung profiles"
plotdf$method[plotdf$method == "VSVR"] = "v-SVR"
plotdf$method[plotdf$method == "spatialDWLS"] = "SpatialDWLS"
plotdf$method = factor(plotdf$method, levels = c("SpatialDecon modelling tumor",
"SpatialDecon ignoring tumor",
"NNLS", "v-SVR", "DWLS", "SpatialDWLS",
"Stereoscope + safeTME",
"Stereoscope + scRNAseq lung profiles"))
colmap = c(
"SpatialDecon modelling tumor" = "red",
"SpatialDecon ignoring tumor" = "orange",
"NNLS" = "grey30",
"v-SVR" = "chartreuse3",
"DWLS" = "darkviolet",
"SpatialDWLS" = "#330099",
"Stereoscope + safeTME" = "dodgerblue4",
"Stereoscope + scRNAseq lung profiles" = "cornflowerblue")
use = (plotdf$stat == "cors") #& (is.element(plotdf$method, c("DWLS", "spatialdecon.ignoretumor", "spatialdecon.modeltumor")))
table(plotdf$method)
use = (plotdf$stat == "cors") & (plotdf$method != "Stereoscope + scRNAseq lung profiles")
plotdf = plotdf[use, ]
par(mar = c(16,5,2,1))
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0, las = 2, xlab = "",
ylab = "Correlation", cex.lab = 1.5)
points(jitter(as.numeric(plotdf$method)), plotdf$value, col = alpha(colmap[plotdf$method], 0.5),
pch = 16)
plotdf$method = as.factor(plotdf$method)
par(mar = c(16,5,2,1))
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0, las = 2, xlab = "",
ylab = "Correlation", cex.lab = 1.5)
points(jitter(as.numeric(plotdf$method)), plotdf$value, col = alpha(colmap[plotdf$method], 0.5),
pch = 16)
str(plotdf$method)
use = (plotdf$stat == "cors") & (plotdf$method != "Stereoscope + scRNAseq lung profiles")
plotdf = plotdf[use, ]
levels(plotdf$method) = setdiff(levels(plotdf$method), "Stereoscope + scRNAseq lung profiles")
levels(plotdf$method)
plotdf$method = factor(plotdf$method, levels = setdiff(levels(plotdf$method), "Stereoscope + scRNAseq lung profiles"))
par(mar = c(16,5,2,1))
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0, las = 2, xlab = "",
ylab = "Correlation", cex.lab = 1.5)
points(jitter(as.numeric(plotdf$method)), plotdf$value, col = alpha(colmap[plotdf$method], 0.5),
pch = 16)
for (name in unique(plotdf))
unique(plotdf$method)
cbind(levels(plotdf$method), rownames(meansdf))
head(meansdf)
meansdf$method = factor(meansdf$method, levels = c("SpatialDecon modelling tumor",
"SpatialDecon ignoring tumor",
"NNLS", "v-SVR", "DWLS", "SpatialDWLS",
"Stereoscope + safeTME"))
meansdf
rownames(meansdf) = meansdf$method
meansdf
for (i in 1:length(levels(plotdf$method))) {
name = levels(plotdf$method)[i]
lines(i + c(-1,1)*0.3, rep(meansdf[name, "mean"], 2))
}
lines(i + c(-1,1)*0.3, rep(meansdf[name, "mean"] - meansdf[name, "ci"], 2))
lines(i + c(-1,1)*0.3, rep(meansdf[name, "mean"] + meansdf[name, "ci"], 2))
lines(rep(i, 2), meansdf[name, "mean"] + c(-1,1) * meansdf[name, "ci"]))
for (i in 1:length(levels(plotdf$method))) {
name = levels(plotdf$method)[i]
lines(i + c(-1,1)*0.3, rep(meansdf[name, "mean"], 2))
lines(i + c(-1,1)*0.2, rep(meansdf[name, "mean"] + meansdf[name, "ci"], 2))
lines(i + c(-1,1)*0.2, rep(meansdf[name, "mean"] - meansdf[name, "ci"], 2))
lines(rep(i, 2), meansdf[name, "mean"] + c(-1,1) * meansdf[name, "ci"])
}
for (i in 1:length(levels(plotdf$method))) {
name = levels(plotdf$method)[i]
lines(i + c(-1,1)*0.3, rep(meansdf[name, "mean"], 2), lwd = 1.2)
lines(i + c(-1,1)*0.2, rep(meansdf[name, "mean"] + meansdf[name, "ci"], 2), lwd = 1.2)
lines(i + c(-1,1)*0.2, rep(meansdf[name, "mean"] - meansdf[name, "ci"], 2), lwd = 1.2)
lines(rep(i, 2), meansdf[name, "mean"] + c(-1,1) * meansdf[name, "ci"], lwd = 1.2)
}
for (i in 1:length(levels(plotdf$method))) {
lwd = 1.5
name = levels(plotdf$method)[i]
lines(i + c(-1,1)*0.3, rep(meansdf[name, "mean"], 2), lwd = lwd)
lines(i + c(-1,1)*0.2, rep(meansdf[name, "mean"] + meansdf[name, "ci"], 2), lwd = lwd)
lines(i + c(-1,1)*0.2, rep(meansdf[name, "mean"] - meansdf[name, "ci"], 2), lwd = lwd)
lines(rep(i, 2), meansdf[name, "mean"] + c(-1,1) * meansdf[name, "ci"], lwd = lwd)
}
svg("serial sections - mean correlation.svg", height = 9, width = 2.5)
par(mar = c(16,5,2,1))
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0, las = 2, xlab = "",
ylab = "Correlation", cex.lab = 1.5)
points(jitter(as.numeric(plotdf$method)), plotdf$value, col = alpha(colmap[plotdf$method], 0.5),
pch = 16)
for (i in 1:length(levels(plotdf$method))) {
lwd = 1.5
name = levels(plotdf$method)[i]
lines(i + c(-1,1)*0.3, rep(meansdf[name, "mean"], 2), lwd = lwd)
lines(i + c(-1,1)*0.2, rep(meansdf[name, "mean"] + meansdf[name, "ci"], 2), lwd = lwd)
lines(i + c(-1,1)*0.2, rep(meansdf[name, "mean"] - meansdf[name, "ci"], 2), lwd = lwd)
lines(rep(i, 2), meansdf[name, "mean"] + c(-1,1) * meansdf[name, "ci"], lwd = lwd)
}
dev.off()
svg("serial sections - mean correlation.svg", height = 9, width = 4)
par(mar = c(16,5,2,1))
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0, las = 2, xlab = "",
ylab = "Correlation", cex.lab = 1.5)
points(jitter(as.numeric(plotdf$method)), plotdf$value, col = alpha(colmap[plotdf$method], 0.5),
pch = 16)
for (i in 1:length(levels(plotdf$method))) {
lwd = 1.5
name = levels(plotdf$method)[i]
lines(i + c(-1,1)*0.3, rep(meansdf[name, "mean"], 2), lwd = lwd)
lines(i + c(-1,1)*0.2, rep(meansdf[name, "mean"] + meansdf[name, "ci"], 2), lwd = lwd)
lines(i + c(-1,1)*0.2, rep(meansdf[name, "mean"] - meansdf[name, "ci"], 2), lwd = lwd)
lines(rep(i, 2), meansdf[name, "mean"] + c(-1,1) * meansdf[name, "ci"], lwd = lwd)
}
dev.off()
for (i in 1:4) {
rect(i*2-0.5, -0.6, i*2+0.5, 1)
}
rect(i*2-0.5, -0.6, i*2+0.5, 1.1, col = alpha("grey80", 0.2))
for (i in 1:4) {
rect(i*2-0.5, -0.6, i*2+0.5, 1.1, col = alpha("grey80", 0.2))
}
svg("serial sections - mean correlation.svg", height = 9, width = 4)
par(mar = c(16,5,2,1))
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0, las = 2, xlab = "",
ylab = "Correlation", cex.lab = 1.5)
for (i in 1:4) {
rect(i*2-0.5, -0.6, i*2+0.5, 1.1, col = alpha("grey80", 0.3), border = 0)
}
points(jitter(as.numeric(plotdf$method)), plotdf$value, col = alpha(colmap[plotdf$method], 0.5),
pch = 16)
for (i in 1:length(levels(plotdf$method))) {
lwd = 1.5
name = levels(plotdf$method)[i]
lines(i + c(-1,1)*0.3, rep(meansdf[name, "mean"], 2), lwd = lwd)
lines(i + c(-1,1)*0.2, rep(meansdf[name, "mean"] + meansdf[name, "ci"], 2), lwd = lwd)
lines(i + c(-1,1)*0.2, rep(meansdf[name, "mean"] - meansdf[name, "ci"], 2), lwd = lwd)
lines(rep(i, 2), meansdf[name, "mean"] + c(-1,1) * meansdf[name, "ci"], lwd = lwd)
}
dev.off()
svg("serial sections - mean correlation.svg", height = 9, width = 4)
par(mar = c(16,5,2,1))
boxplot(plotdf$value ~ plotdf$method, col = 0, border = 0, las = 2, xlab = "",
ylab = "Correlation", cex.lab = 1.5)
for (i in 1:3) {
rect(i*2-0.5, -0.6, i*2+0.5, 1.1, col = alpha("grey80", 0.4), border = 0)
}
points(jitter(as.numeric(plotdf$method)), plotdf$value, col = alpha(colmap[plotdf$method], 0.5),
pch = 16)
for (i in 1:length(levels(plotdf$method))) {
lwd = 1.5
name = levels(plotdf$method)[i]
lines(i + c(-1,1)*0.3, rep(meansdf[name, "mean"], 2), lwd = lwd)
lines(i + c(-1,1)*0.2, rep(meansdf[name, "mean"] + meansdf[name, "ci"], 2), lwd = lwd)
lines(i + c(-1,1)*0.2, rep(meansdf[name, "mean"] - meansdf[name, "ci"], 2), lwd = lwd)
lines(rep(i, 2), meansdf[name, "mean"] + c(-1,1) * meansdf[name, "ci"], lwd = lwd)
}
dev.off()
