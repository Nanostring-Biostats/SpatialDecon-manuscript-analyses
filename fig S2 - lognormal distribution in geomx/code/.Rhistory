denslog = density(skew.log[!is.na(skew.log)])
plot(denslin, main = "All regions",
col = 0, xlab = "Skewness of genes in\nmicroenvironment regions", ylab = "",
cex.lab = 1.2, cex.axis = 0.7, xlim = c(-2, 10), ylim = c(0, max(denslog$y)))
polygon(denslin, col = alpha("grey50", 0.5), border = NA)
polygon(denslog, col = alpha("orange", 0.5), border = NA)
# TME only:
skew.lin = apply(negnorm, 1, skewness)
skew.log = apply(log2(pmax(negnorm, 1)), 1, skewness)
denslin = density(skew.lin[!is.na(skew.lin)])
denslog = density(skew.log[!is.na(skew.log)])
plot(denslin,  main = "Microenvironment regions only",
col = 0, xlab = "Skewness of genes in\nmicroenvironment regions", ylab = "",
cex.lab = 1.2, cex.axis = 0.7 , xlim = c(-2, 10))
polygon(denslin, col = alpha("grey50", 0.5), border = NA)
polygon(denslog, col = alpha("orange", 0.5), border = NA)
legend("topright", fill = alpha(c("grey50", "orange"), 0.5),
legend = c("Linear-scale data", "Log-transformed data"), cex = 1)
mean(skew.lin, na.rm = T)
skew.lin = apply(negnormall, 1, skewness)
skew.log = apply(log2(pmax(negnormall, 1)), 1, skewness)
denslin = density(skew.lin[!is.na(skew.lin)])
denslog = density(skew.log[!is.na(skew.log)])
plot(denslin, main = "All regions",
col = 0, xlab = "Skewness of genes in\nmicroenvironment regions", ylab = "",
cex.lab = 1.2, cex.axis = 0.7, xlim = c(-2, 10), ylim = c(0, max(denslog$y)))
polygon(denslin, col = alpha("grey50", 0.5), border = NA)
polygon(denslog, col = alpha("orange", 0.5), border = NA)
mean(skew.lin, na.rm = T)
setwd("~/SpatialDecon-manuscript-analyses/fig 2 - cell pellet array analysis/code")
rm(list = ls())
library(logNormReg)
library(e1071)
library(NormqPCR)
library(scales)
library(ggplot2)
library(ggthemes)
source("deconvolution functions - NNLS and vSVR and DWLS.R")
source("DWLS_functions.R")
#### load CPA data: (HEK293 mixture) ---------------------
raw = t(as.matrix(read.csv("../data/HEK393-CCRF mixture raw data.csv", row.names = 1, header = T, stringsAsFactors = F)))
annot = read.csv("../data/HEK393-CCRF mixture AOI annotations.csv", row.names = 1, header = T, stringsAsFactors = F)
pnotes = read.csv("../data/HEK393-CCRF mixture probe notes.csv", stringsAsFactors = F, row.names = 1)
#### normalize raw data: -----------------------
# derive housekeepers:
topexpressing = rownames(raw)[order(rowMeans(raw), decreasing = T)[1:50]]
genorm = selectHKs(t(log2(raw)[topexpressing, ]),
method = "geNorm",
Symbols = topexpressing)
plot(genorm$variation)
hks = genorm$ranking[1:27]
# normalize:
annot$hk.factor = exp(colMeans(log(raw[hks, ])))
norm = sweep(raw, 2, annot$hk.factor, "/") * mean(annot$hk.factor)
dim(norm)
colnames(norm)
head(annot)
annot$mixprop
annot$mix1
annot$mix2
dim(norm[, is.element(annot$mixprop, c(0,1))])
# demonstrate reproducibility:
hex = annot$mixprop == 1
ccrf = annot$mixprop == 0
table(hek)
# demonstrate reproducibility:
hek = annot$mixprop == 1
table(hek)
table(ccrf)
dim(norm)
var(c(0,1))
# demonstrate reproducibility:
hek = annot$mixprop == 1
ccrf = annot$mixprop == 0
var.hek = apply(log2(pmax(norm[, hek],1)), 1, var)
var.ccrf = apply(log2(pmax(norm[, ccrf],1)), 1, var)
mean.hek = apply(log2(pmax(norm[, hek],1)), 1, mean)
mean.ccrf = apply(log2(pmax(norm[, ccrf],1)), 1, mean)
var.btw = apply(cbind(mean.hek, mean.ccrf), 1, var)
# demonstrate reproducibility:
hek = annot$mixprop == 1
ccrf = annot$mixprop == 0
var.hek = apply(log2(pmax(norm[, hek],1)), 1, var)
var.ccrf = apply(log2(pmax(norm[, ccrf],1)), 1, var)
mean.hek = apply(log2(pmax(norm[, hek],1)), 1, mean)
mean.ccrf = apply(log2(pmax(norm[, ccrf],1)), 1, mean)
var.btw = apply(cbind(mean.hek, mean.ccrf), 1, var)
var.within = rowMeans(cbind(var.hek, var.ccrf))
plot(var.btw, var.within)
abline(0,1)
plot(var.btw, var.within, log = "xy")
abline(0,1)
plot(var.btw, var.within, xlim= c(0,21), ylim = c(0,21))
plot(var.btw, var.within, log = "xy")
plot(var.btw, var.within, xlim= c(0,21), ylim = c(0,21))
abline(0,1)
plot(var.btw, var.within, xlim= c(0,21), ylim = c(0,21), pch = 16, col = alpha("darkblue", 0.2))
abline(0,1)
plot(var.btw, var.within, xlim= c(0,21), ylim = c(0,21),
pch = 16, col = alpha("darkblue", 0.2),
xlab = "Between cell-line variance (biological variance)",
ylab = "Within cell-line variance (biological variance)")
plot(var.btw, var.within, xlim= c(0,21), ylim = c(0,21),
pch = 16, col = alpha("darkblue", 0.2),
xlab = "Between cell-line variance (biological variance)",
ylab = "Within cell-line variance (biological variance)",
cex.lab = 15)
dev.off()
plot(var.btw, var.within, xlim= c(0,21), ylim = c(0,21),
pch = 16, col = alpha("darkblue", 0.2),
xlab = "Between cell-line variance (biological variance)",
ylab = "Within cell-line variance (biological variance)",
cex.lab = 1.5)
abline(0,1)
plot(sqrt(var.btw), sqrt(var.within), xlim= c(0,21), ylim = c(0,21),
pch = 16, col = alpha("darkblue", 0.2),
xlab = "Between cell-line variance (biological variance)",
ylab = "Within cell-line variance (biological variance)",
cex.lab = 1.5)
abline(0,1)
dev.off()
svg("../results/within vs between cell line variance.svg")
plot(var.btw, var.within, xlim= c(0,21), ylim = c(0,21),
pch = 16, col = alpha("darkblue", 0.2),
xlab = "Between cell-line variance (biological variance)",
ylab = "Within cell-line variance (biological variance)",
cex.lab = 1.5)
abline(0,1)
dev.off()
mean(var.within)
mean(var.bet)
mean(var.between)
mean(var.btw)
c(mean(var.btw), mean(var.within))
sqrt(c(mean(var.btw), mean(var.within)))
setwd("~/SpatialDecon-manuscript-analyses/fig s___ - lognormal distribution in healthy tissues/code")
rm(list = ls())
library(NormqPCR)
library(scales)
library(ggplot2)
library(ggthemes)
library(e1071)
library(here)
library(readxl)
# load segment/AOI annotation:
annot = read_xlsx("../data/kidney.xlsx", sheet = "TargetCountMatrix")
# load segment/AOI annotation:
annot = read_xlsx("../data/kidney.xlsx", sheet = "SegmentProperties")
raw = read_xlsx("../data/kidney.xlsx", sheet = "TargetCountMatrix")
dim(raw)
dim(annot)
annot[1:5,1:5]
# load segment/AOI annotation:
annot = as.data.frame(read_xlsx("../data/kidney.xlsx", sheet = "SegmentProperties"))
raw[1:5,1:5]
raw0 = read_xlsx("../data/kidney.xlsx", sheet = "TargetCountMatrix")
raw = as.matrix(raw[, -1])
raw[1:5,1:5]
rownames(raw) = raw0$TargetName
rm(raw0)
head(annot)
# normalize:
negnorm = sweep(raw, 2, apply(raw, 2, quantile, 0.9), "/") *  mean(apply(raw, 2, quantile, 0.9))
# linear and logscale data:
lindat = t(norm)
logdat = t(log2(pmax(norm, 1)))
# normalize:
norm = sweep(raw, 2, apply(raw, 2, quantile, 0.9), "/") *  mean(apply(raw, 2, quantile, 0.9))
str(norm)
# linear and logscale data:
lindat = t(norm)
logdat = t(log2(pmax(norm, 1)))
dim(norm)
# linear and logscale data:
lindat = (norm)
logdat = (log2(pmax(norm, 1)))
# calculate skew for all genes, in both logscale and linear scale:
skew.lin = apply(lindat, 2, skewness)
skew.log = apply(logdat, 2, skewness)
denslin = density(skew.lin[!is.na(skew.lin)])
denslog = density(skew.log[!is.na(skew.log)])
par(mar = c(4,4,.1,.1))
plot(denslin, col = 0, xlab = "Skewness of genes in\nmicroenvironment regions", ylab = "",
cex.lab = 1.2, cex.axis = 0.7, main = "", ylim = c(0, max(denslog$y)))
par(mar = c(4,4,.1,.1))
plot(denslin, col = 0, xlab = "Skewness of genes in\nmicroenvironment regions", ylab = "",
cex.lab = 1.2, cex.axis = 0.7, main = "", ylim = c(0, max(denslog$y)))
polygon(denslin, col = alpha("grey50", 0.5), border = NA)
polygon(denslog, col = alpha("orange", 0.5), border = NA)
legend("topright", fill = alpha(c("grey50", "orange"), 0.5),
legend = c("Linear-scale data", "Log-transformed data"), cex = 1)
table(annot$SegmentLabel)
# summary stats:
mean(skew.lin > 2, na.rm = T)
mean(abs(skew.log) > 2, na.rm = T)
mean(skew.lin, na.rm = T)
mean(skew.log, na.rm = T)
# show mean-variance relationship on logscale, linear scale:
means.lin = apply(lindat[, !grepl("NegProbe", colnames(lindat))], 2, mean)
means.log = apply(logdat[, !grepl("NegProbe", colnames(logdat))], 2, mean)
sds.lin = apply(lindat[, !grepl("NegProbe", colnames(lindat))], 2, sd)
sds.log = apply(logdat[, !grepl("NegProbe", colnames(logdat))], 2, sd)
# summary stats:
range(sds.lin)
range(sds.lin)[2] / range(sds.lin)[1]
range(sds.log, na.rm = T)
range(sds.log, na.rm = T)[2] / range(sds.log, na.rm = T)[1]
source("~/SpatialDecon-manuscript-analyses/fig s___ - lognormal distribution in healthy tissues/code/evaluate lognormal distribution in kidney.R")
source("~/SpatialDecon-manuscript-analyses/fig s___ - lognormal distribution in healthy tissues/code/evaluate lognormal distribution in kidney.R")
# summary stats:
mean(skew.lin > 2, na.rm = T)
mean(abs(skew.log) > 2, na.rm = T)
mean(skew.lin, na.rm = T)
mean(skew.log, na.rm = T)
# show mean-variance relationship on logscale, linear scale:
means.lin = apply(lindat[, !grepl("NegProbe", colnames(lindat))], 2, mean)
means.log = apply(logdat[, !grepl("NegProbe", colnames(logdat))], 2, mean)
sds.lin = apply(lindat[, !grepl("NegProbe", colnames(lindat))], 2, sd)
sds.log = apply(logdat[, !grepl("NegProbe", colnames(logdat))], 2, sd)
# summary stats:
range(sds.lin)
range(sds.lin)[2] / range(sds.lin)[1]
range(sds.log, na.rm = T)
range(sds.log, na.rm = T)[2] / range(sds.log, na.rm = T)[1]
par(mar = c(4,4,.1,1))
par(mfrow = c(1,2))
plot(log2(means.lin), log2(sds.lin), log = "", xlab = "Mean", ylab = "SD",
col = alpha("dodgerblue4", 0.2), pch = 16, xaxt = "n", yaxt = "n")
axis(1, at = log2(10^seq(-3, 5, 2)), labels = 10^(seq(-3, 5, 2)), cex.axis = 0.65)
plot(log2(means.lin), log2(sds.lin), log = "", xlab = "Mean", ylab = "SD",
col = alpha("dodgerblue4", 0.2), pch = 16) #, xaxt = "n", yaxt = "n")
par(mar = c(4,4,.1,1))
par(mfrow = c(1,2))
plot(log2(means.lin), log2(sds.lin), log = "", xlab = "Mean", ylab = "SD",
col = alpha("dodgerblue4", 0.2), pch = 16) #, xaxt = "n", yaxt = "n")
#axis(1, at = log2(10^seq(-3, 5, 2)), labels = 10^(seq(-3, 5, 2)), cex.axis = 0.65)
#axis(2, at = log2(10^seq(-15, 15, 2)), labels = 10^(seq(-15, 15, 2)), cex.axis = 0.75)
legend("top", legend = "linear-scale data    ", bty = "n")
lines(lowess(log2(means.lin[sds.lin > 0]), log2(sds.lin[sds.lin > 0])), col = "orange", lwd = 2)
plot(means.log, sds.log, xlab = "Mean", ylab = "SD",
col = alpha("dodgerblue4", 0.2), pch = 16, cex.axis = 0.65)
legend("top", legend = "log2-scale data    ", bty = "n")
lines(lowess(means.log[!is.na(sds.log)], sds.log[!is.na(sds.log)]), col = "orange", lwd = 2)
annot$SegmentLabel
dim(norm)
# show mean-variance relationship on logscale, linear scale:
means.lin = apply(lindat[, !grepl("NegProbe", colnames(lindat))], 1, mean)
means.log = apply(logdat[, !grepl("NegProbe", colnames(logdat))], 1, mean)
sds.lin = apply(lindat[, !grepl("NegProbe", colnames(lindat))], 1, sd)
sds.log = apply(logdat[, !grepl("NegProbe", colnames(logdat))], 1, sd)
# summary stats:
range(sds.lin)
range(sds.lin)[2] / range(sds.lin)[1]
range(sds.log, na.rm = T)
range(sds.log, na.rm = T)[2] / range(sds.log, na.rm = T)[1]
par(mar = c(4,4,.1,1))
par(mfrow = c(1,2))
plot(log2(means.lin), log2(sds.lin), log = "", xlab = "Mean", ylab = "SD",
col = alpha("dodgerblue4", 0.2), pch = 16) #, xaxt = "n", yaxt = "n")
#axis(1, at = log2(10^seq(-3, 5, 2)), labels = 10^(seq(-3, 5, 2)), cex.axis = 0.65)
#axis(2, at = log2(10^seq(-15, 15, 2)), labels = 10^(seq(-15, 15, 2)), cex.axis = 0.75)
legend("top", legend = "linear-scale data    ", bty = "n")
lines(lowess(log2(means.lin[sds.lin > 0]), log2(sds.lin[sds.lin > 0])), col = "orange", lwd = 2)
plot(means.log, sds.log, xlab = "Mean", ylab = "SD",
col = alpha("dodgerblue4", 0.2), pch = 16, cex.axis = 0.65)
legend("top", legend = "log2-scale data    ", bty = "n")
lines(lowess(means.log[!is.na(sds.log)], sds.log[!is.na(sds.log)]), col = "orange", lwd = 2)
plot(log2(means.lin), log2(sds.lin), log = "", xlab = "Mean", ylab = "SD",
col = alpha("dodgerblue4", 0.2), pch = 16, xaxt = "n", yaxt = "n")
axis(1, at = log2(10^seq(-3, 5, 2)), labels = 10^(seq(-3, 5, 2)), cex.axis = 0.65)
axis(2, at = log2(10^seq(-15, 15, 2)), labels = 10^(seq(-15, 15, 2)), cex.axis = 0.75)
png("../results/mean vs. sd - kidney.svg", height = 3, width = 6.6, units = "in", res = 300)
par(mar = c(4,4,.1,1))
par(mfrow = c(1,2))
plot(log2(means.lin), log2(sds.lin), log = "", xlab = "Mean", ylab = "SD",
col = alpha("dodgerblue4", 0.2), pch = 16, xaxt = "n", yaxt = "n")
axis(1, at = log2(10^seq(-3, 5, 2)), labels = 10^(seq(-3, 5, 2)), cex.axis = 0.65)
axis(2, at = log2(10^seq(-15, 15, 2)), labels = 10^(seq(-15, 15, 2)), cex.axis = 0.75)
legend("top", legend = "linear-scale data    ", bty = "n")
lines(lowess(log2(means.lin[sds.lin > 0]), log2(sds.lin[sds.lin > 0])), col = "orange", lwd = 2)
plot(means.log, sds.log, xlab = "Mean", ylab = "SD",
col = alpha("dodgerblue4", 0.2), pch = 16, cex.axis = 0.65)
legend("top", legend = "log2-scale data    ", bty = "n")
lines(lowess(means.log[!is.na(sds.log)], sds.log[!is.na(sds.log)]), col = "orange", lwd = 2)
dev.off()
png("../results/mean vs. sd - kidney.png", height = 3, width = 6.6, units = "in", res = 300)
par(mar = c(4,4,.1,1))
par(mfrow = c(1,2))
plot(log2(means.lin), log2(sds.lin), log = "", xlab = "Mean", ylab = "SD",
col = alpha("dodgerblue4", 0.2), pch = 16, xaxt = "n", yaxt = "n")
axis(1, at = log2(10^seq(-3, 5, 2)), labels = 10^(seq(-3, 5, 2)), cex.axis = 0.65)
axis(2, at = log2(10^seq(-15, 15, 2)), labels = 10^(seq(-15, 15, 2)), cex.axis = 0.75)
legend("top", legend = "linear-scale data    ", bty = "n")
lines(lowess(log2(means.lin[sds.lin > 0]), log2(sds.lin[sds.lin > 0])), col = "orange", lwd = 2)
plot(means.log, sds.log, xlab = "Mean", ylab = "SD",
col = alpha("dodgerblue4", 0.2), pch = 16, cex.axis = 0.65)
legend("top", legend = "log2-scale data    ", bty = "n")
lines(lowess(means.log[!is.na(sds.log)], sds.log[!is.na(sds.log)]), col = "orange", lwd = 2)
dev.off()
source("~/SpatialDecon-manuscript-analyses/fig s___ - lognormal distribution in healthy tissues/code/evaluate lognormal distribution in kidney.R")
# summary stats:
mean(skew.lin > 2, na.rm = T)
dim(norm)
# summary stats:
mean(skew.lin > 2, na.rm = T)
min(skew.lin)
mean(skew.lin, na.rm = T)
mean(skew.log, na.rm = T)
mean(abs(skew.log) > 2, na.rm = T)
# summary stats:
range(sds.lin)
range(sds.lin)[2] / range(sds.lin)[1]
range(sds.log, na.rm = T)
range(sds.log, na.rm = T)[2] / range(sds.log, na.rm = T)[1]
dim(annot)
dim(nom)
dim(norm)
rm(list = ls())
library(NormqPCR)
library(scales)
library(ggplot2)
library(ggthemes)
library(e1071)
library(readxl)
# load data:
annot = as.data.frame(read_xlsx("../data/pancreas.xlsx", sheet = "SegmentProperties"))
# load data:
annot = as.data.frame(read_xlsx("../data/pancreas Q3 Norm.xlsx", sheet = "SegmentProperties"))
raw0 = read_xlsx("../data/pancreas Q3 Norm.xlsx", sheet = "TargetCountMatrix")
raw = as.matrix(raw0[, -1])
rownames(raw) = raw0$TargetName
rm(raw0)
# normalize:
norm = sweep(raw, 2, apply(raw, 2, quantile, 0.9), "/") *  mean(apply(raw, 2, quantile, 0.9))
dim(norm)
# use geometric AOIs for a well-controlled comparison:
use = annot$SegmentLabel == "Geometric Segment"
annot = annot[use, ]
norm = norm[, use]
# linear and logscale data:
lindat = (norm)
logdat = (log2(pmax(norm, 1)))
# calculate skew for all genes, in both logscale and linear scale:
skew.lin = apply(lindat, 2, skewness)
skew.log = apply(logdat, 2, skewness)
denslin = density(skew.lin[!is.na(skew.lin)])
denslog = density(skew.log[!is.na(skew.log)])
par(mar = c(4,4,.1,.1))
plot(denslin, col = 0, xlab = "Skewness of genes in\nmicroenvironment regions", ylab = "",
cex.lab = 1.2, cex.axis = 0.7, main = "", ylim = c(0, max(denslog$y)))
polygon(denslin, col = alpha("grey50", 0.5), border = NA)
polygon(denslog, col = alpha("orange", 0.5), border = NA)
legend("topright", fill = alpha(c("grey50", "orange"), 0.5),
legend = c("Linear-scale data", "Log-transformed data"), cex = 1)
dev.off()
par(mar = c(4,4,.1,.1))
plot(denslin, col = 0, xlab = "Skewness of genes in\nmicroenvironment regions", ylab = "",
cex.lab = 1.2, cex.axis = 0.7, main = "", ylim = c(0, max(denslog$y)))
polygon(denslin, col = alpha("grey50", 0.5), border = NA)
polygon(denslog, col = alpha("orange", 0.5), border = NA)
legend("topright", fill = alpha(c("grey50", "orange"), 0.5),
legend = c("Linear-scale data", "Log-transformed data"), cex = 1)
plot(denslin, col = 0, xlab = "Skewness of genes in\nmicroenvironment regions", ylab = "",
cex.lab = 1.2, cex.axis = 0.7, main = "", xlim = c(0, max(denslin$x)), ylim = c(0, max(denslog$y)))
polygon(denslin, col = alpha("grey50", 0.5), border = NA)
polygon(denslog, col = alpha("orange", 0.5), border = NA)
legend("topright", fill = alpha(c("grey50", "orange"), 0.5),
legend = c("Linear-scale data", "Log-transformed data"), cex = 1)
svg("../results/skewness in lin vs. log - pancreas.svg", width = 6, height = 4)
par(mar = c(4,4,.1,.1))
plot(denslin, col = 0, xlab = "Skewness of genes in\nmicroenvironment regions", ylab = "",
cex.lab = 1.2, cex.axis = 0.7, main = "", xlim = c(0, max(denslin$x)), ylim = c(0, max(denslog$y)))
polygon(denslin, col = alpha("grey50", 0.5), border = NA)
polygon(denslog, col = alpha("orange", 0.5), border = NA)
legend("topright", fill = alpha(c("grey50", "orange"), 0.5),
legend = c("Linear-scale data", "Log-transformed data"), cex = 1)
dev.off()
# summary stats:
mean(skew.lin > 2, na.rm = T)
mean(abs(skew.log) > 2, na.rm = T)
mean(skew.lin, na.rm = T)
mean(skew.log, na.rm = T)
min(skew.li)
min(skew.lin)
mean(skew.log, na.rm = T)
mean(abs(skew.log) > 2, na.rm = T)
# show mean-variance relationship on logscale, linear scale:
means.lin = apply(lindat[, !grepl("NegProbe", colnames(lindat))], 1, mean)
means.log = apply(logdat[, !grepl("NegProbe", colnames(logdat))], 1, mean)
sds.lin = apply(lindat[, !grepl("NegProbe", colnames(lindat))], 1, sd)
sds.log = apply(logdat[, !grepl("NegProbe", colnames(logdat))], 1, sd)
# summary stats:
range(sds.lin)
range(sds.lin)[2] / range(sds.lin)[1]
range(sds.log, na.rm = T)[2] / range(sds.log, na.rm = T)[1]
par(mar = c(4,4,.1,1))
par(mfrow = c(1,2))
plot(log2(means.lin), log2(sds.lin), log = "", xlab = "Mean", ylab = "SD",
col = alpha("dodgerblue4", 0.2), pch = 16, xaxt = "n", yaxt = "n")
axis(1, at = log2(10^seq(-3, 5, 1)), labels = 10^(seq(-3, 5, 1)), cex.axis = 0.65)
axis(2, at = log2(10^seq(-15, 15, 1)), labels = 10^(seq(-15, 15, 1)), cex.axis = 0.75)
legend("top", legend = "linear-scale data    ", bty = "n")
lines(lowess(log2(means.lin[sds.lin > 0]), log2(sds.lin[sds.lin > 0])), col = "orange", lwd = 2)
plot(means.log, sds.log, xlab = "Mean", ylab = "SD",
col = alpha("dodgerblue4", 0.2), pch = 16, cex.axis = 0.65)
legend("top", legend = "log2-scale data    ", bty = "n")
lines(lowess(means.log[!is.na(sds.log)], sds.log[!is.na(sds.log)]), col = "orange", lwd = 2)
dev.off()
dev.off()
dev.off()
png("../results/mean vs. sd - pancreas.png", height = 3, width = 6.6, units = "in", res = 300)
par(mar = c(4,4,.1,1))
par(mfrow = c(1,2))
plot(log2(means.lin), log2(sds.lin), log = "", xlab = "Mean", ylab = "SD",
col = alpha("dodgerblue4", 0.2), pch = 16, xaxt = "n", yaxt = "n")
axis(1, at = log2(10^seq(-3, 5, 1)), labels = 10^(seq(-3, 5, 1)), cex.axis = 0.65)
axis(2, at = log2(10^seq(-15, 15, 1)), labels = 10^(seq(-15, 15, 1)), cex.axis = 0.75)
legend("top", legend = "linear-scale data    ", bty = "n")
lines(lowess(log2(means.lin[sds.lin > 0]), log2(sds.lin[sds.lin > 0])), col = "orange", lwd = 2)
plot(means.log, sds.log, xlab = "Mean", ylab = "SD",
col = alpha("dodgerblue4", 0.2), pch = 16, cex.axis = 0.65)
legend("top", legend = "log2-scale data    ", bty = "n")
lines(lowess(means.log[!is.na(sds.log)], sds.log[!is.na(sds.log)]), col = "orange", lwd = 2)
dev.off()
dim(annot)
dim(norm)
setwd("~/SpatialDecon-manuscript-analyses/fig S2 - lognormal distribution in geomx/code")
source("~/SpatialDecon-manuscript-analyses/fig S2 - lognormal distribution in geomx/code/evaluate lognormal distribution in GeoMx.R")
svg("../results/skewness.svg", height = 4)
# look at skweness:
par(mfrow = c(1,2))
# all regions:
skew.lin = apply(negnormall, 1, skewness)
skew.log = apply(log2(pmax(negnormall, 1)), 1, skewness)
denslin = density(skew.lin[!is.na(skew.lin)])
denslog = density(skew.log[!is.na(skew.log)])
plot(denslin, main = "All regions",
col = 0, xlab = "Skewness", ylab = "",
cex.lab = 1.2, cex.axis = 0.7, xlim = c(-2, 10), ylim = c(0, max(denslog$y)))
polygon(denslin, col = alpha("grey50", 0.5), border = NA)
polygon(denslog, col = alpha("orange", 0.5), border = NA)
mean(skew.lin, na.rm = T)
# TME only:
skew.lin = apply(negnorm, 1, skewness)
skew.log = apply(log2(pmax(negnorm, 1)), 1, skewness)
denslin = density(skew.lin[!is.na(skew.lin)])
denslog = density(skew.log[!is.na(skew.log)])
plot(denslin,  main = "Microenvironment regions only",
col = 0, xlab = "Skewness", ylab = "",
cex.lab = 1.2, cex.axis = 0.7 , xlim = c(-2, 10))
polygon(denslin, col = alpha("grey50", 0.5), border = NA)
polygon(denslog, col = alpha("orange", 0.5), border = NA)
legend("topright", fill = alpha(c("grey50", "orange"), 0.5),
legend = c("Linear-scale data", "Log-transformed data"), cex = 1)
dev.off()
mean(skew.lin, na.rm = T)
svg("../results/skewness.svg", height = 4)
# look at skweness:
par(mfrow = c(1,2))
# all regions:
skew.lin = apply(negnormall, 1, skewness)
skew.log = apply(log2(pmax(negnormall, 1)), 1, skewness)
denslin = density(skew.lin[!is.na(skew.lin)])
denslog = density(skew.log[!is.na(skew.log)])
plot(denslin, main = "All regions",
col = 0, xlab = "Skewness", ylab = "",
cex.lab = 1.2, cex.axis = 0.7, xlim = c(-2, 10), ylim = c(0, max(denslog$y)))
polygon(denslin, col = alpha("grey50", 0.5), border = NA)
polygon(denslog, col = alpha("orange", 0.5), border = NA)
mean(skew.lin, na.rm = T)
# TME only:
skew.lin = apply(negnorm, 1, skewness)
skew.log = apply(log2(pmax(negnorm, 1)), 1, skewness)
denslin = density(skew.lin[!is.na(skew.lin)])
denslog = density(skew.log[!is.na(skew.log)])
plot(denslin,  main = "Microenvironment regions only",
col = 0, xlab = "Skewness", ylab = "",
cex.lab = 1.2, cex.axis = 0.7 , xlim = c(-2, 10))
polygon(denslin, col = alpha("grey50", 0.5), border = NA)
polygon(denslog, col = alpha("orange", 0.5), border = NA)
legend("topright", fill = alpha(c("grey50", "orange"), 0.5),
legend = c("Linear-scale data", "Log-transformed data"), cex = .5)
dev.off()
mean(skew.lin, na.rm = T)
svg("../results/skewness.svg", height = 4)
# look at skweness:
par(mfrow = c(1,2))
# all regions:
skew.lin = apply(negnormall, 1, skewness)
skew.log = apply(log2(pmax(negnormall, 1)), 1, skewness)
denslin = density(skew.lin[!is.na(skew.lin)])
denslog = density(skew.log[!is.na(skew.log)])
plot(denslin, main = "All regions",
col = 0, xlab = "Skewness", ylab = "",
cex.lab = 1.2, cex.axis = 0.7, xlim = c(-2, 10), ylim = c(0, max(denslog$y)))
polygon(denslin, col = alpha("grey50", 0.5), border = NA)
polygon(denslog, col = alpha("orange", 0.5), border = NA)
mean(skew.lin, na.rm = T)
# TME only:
skew.lin = apply(negnorm, 1, skewness)
skew.log = apply(log2(pmax(negnorm, 1)), 1, skewness)
denslin = density(skew.lin[!is.na(skew.lin)])
denslog = density(skew.log[!is.na(skew.log)])
plot(denslin,  main = "Microenvironment regions only",
col = 0, xlab = "Skewness", ylab = "",
cex.lab = 1.2, cex.axis = 0.7 , xlim = c(-2, 10))
polygon(denslin, col = alpha("grey50", 0.5), border = NA)
polygon(denslog, col = alpha("orange", 0.5), border = NA)
legend("topright", fill = alpha(c("grey50", "orange"), 0.5),
legend = c("Linear-scale data", "Log-transformed data"), cex = .75)
dev.off()
mean(skew.lin, na.rm = T)
